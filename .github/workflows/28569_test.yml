name: 28569 Test

on:
  push:
    branches:
      - main

jobs:
  check_tests:  # Preverimo, če obstajajo testne datoteke
    runs-on: Linux
    outputs:
      tests_exist: ${{ steps.check.outputs.exists }}

    steps:
      - name: Checkout kodo
        uses: actions/checkout@v4  # Prenese trenutno stanje kode iz GitHub repozitorija

      - name: Preveri če obstajajo testi
        id: check
        run: |
          if [ -d "tests" ] && ls tests/test_*.py 1> /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Ni testov!" > napaka.txt
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Shrani napaka.txt (če je)
        if: failure()
        uses: actions/upload-artifact@v4  # Shrani artefakt, ki ga lahko vidiš v GitHub UI
        with:
          name: napaka  # Ime artefakta
          path: napaka.txt  # Datoteka, ki jo želimo shraniti

  run_tests:  # Namesti okolje in zažene teste
    needs: check_tests
    if: needs.check_tests.outputs.tests_exist == 'true'
    runs-on: Linux

    strategy:
      matrix:
        python: [3.10, 3.11]  # Matrika test bo zagnan 2 krat enkrat y python 3.8 in drugič z 3.10

    steps:
      - name: Checkout kodo
        uses: actions/checkout@v4

      - name: Namesti Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Namesti odvisnosti
        run: |
          python -m pip install --upgrade pip
          pip install pytest opencv-python

      - name: Zaženi teste
        run: |
          pytest || echo "Napaka pri testih!" > napaka.txt

      - name: Shrani napaka.txt (če obstaja)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: napaka
          path: napaka.txt
